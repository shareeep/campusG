apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  namespace: campusg
  labels:
    app: order-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      containers:
      - name: order-service
        image: ${DOCKER_REGISTRY:-localhost}/campusg/order-service:${TAG:-latest}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: http
        # Updated env vars to match the simplified ConfigMap after saga refactoring
        env:
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: order-service-config
              key: database_url
        - name: KAFKA_BROKERS
          valueFrom:
            configMapKeyRef:
              name: order-service-config
              key: kafka_brokers
        - name: FLASK_APP
          value: "run.py"
        - name: FLASK_ENV
          valueFrom:
            configMapKeyRef:
              name: order-service-config
              key: flask_env
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: order-service-secrets
              key: secret_key
              optional: true
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "300m"
      initContainers:
      - name: wait-for-postgres
        image: busybox
        command: ['sh', '-c', 'until nc -z postgres 5432; do echo waiting for postgres; sleep 2; done;']
      - name: wait-for-kafka
        image: busybox
        command: ['sh', '-c', 'until nc -z kafka 9092; do echo waiting for kafka; sleep 2; done;']
