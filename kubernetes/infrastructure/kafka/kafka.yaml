apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: campusg
spec:
  serviceName: "kafka"
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: confluentinc/cp-kafka:7.3.0
        ports:
        - containerPort: 9092
          name: client
        - containerPort: 29092
          name: internal
        env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zookeeper:2181"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: "PLAINTEXT"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: kafka-data
          mountPath: /var/lib/kafka/data
        readinessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
      initContainers:
      - name: wait-for-zookeeper
        image: busybox
        command: ['sh', '-c', 'until nc -z zookeeper 2181; do echo waiting for zookeeper; sleep 2; done;']
  volumeClaimTemplates:
  - metadata:
      name: kafka-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: campusg
  labels:
    app: kafka
spec:
  ports:
  - port: 9092
    targetPort: 9092
    name: client
  - port: 29092
    targetPort: 29092
    name: internal
  selector:
    app: kafka
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-topics
  namespace: campusg
data:
  topics.json: |
    {
      "topics": [
        {
          "name": "order-events",
          "partitions": 3,
          "replicationFactor": 1
        },
        {
          "name": "payment-events",
          "partitions": 3,
          "replicationFactor": 1
        },
        {
          "name": "user-events",
          "partitions": 3,
          "replicationFactor": 1
        },
        {
          "name": "notification-events",
          "partitions": 3,
          "replicationFactor": 1
        }
      ]
    }
